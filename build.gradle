plugins {
	id "java"
	id "edu.wpi.first.GradleRIO" version "2020.2.2"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

deploy {
	targets {
		roboRIO("roborio") {
			team = frc.getTeamOrDefault(342)
		}

		target("rpi") {
			directory = "/home/pi"

			locations {
				ssh {
					address = "10.3.42.3"
					user = "pi"
					password = ''
				}
			}
		}
	}

	artifacts {
		// Deploy Jar file to RoboRIO
		frcJavaArtifact("frcJava") {
			targets << "roborio"
			debug = frc.getDebugOrDefault(false)
		}
		
		// Deploy arbitrary files to RoboRIO
		fileTreeArtifact('frcStaticFileDeploy') {
	    // The directory below is the local directory to deploy
      files = fileTree(dir: 'src/main/deploy')
      // Deploy to RoboRIO target, into /home/lvuser/deploy
      targets << "roborio"
      directory = '/home/lvuser/deploy'
    }

		// Deploy Python code to rPi
		fileTreeArtifact("pyFileDeploy") {
			files = fileTree(dir: "src/main/python")
			targets << "rpi"
		}
		
		// Run Python code after deploy
		commandArtifact("pyFileRun") {
			command = "echo hello"
			targets << "rpi"
		}
	}
}

dependencies {
	implementation wpi.deps.wpilib()
    nativeZip wpi.deps.wpilibJni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.wpilibJni(wpi.platforms.desktop)

    implementation wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

	testImplementation 'junit:junit:4.12'

	simulation wpi.deps.sim.gui(wpi.platforms.desktop, false)
}

jar {
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest("frc.robot.Main")
}
